<Window x:Class="Abo.Client.Wpf.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="clr-namespace:Abo.Client.Wpf.Controls"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:messages="clr-namespace:Abo.Client.Wpf.ViewModels.Messages"
        Title="MainWindow" Height="700" Width="725" Loaded="Window_OnLoaded">
    <xctk:BusyIndicator IsBusy="{Binding IsBusy}">
        <TabControl>
            <TabItem Header="  Chat  ">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="100" Width="*" />
                        <ColumnDefinition MinWidth="150" Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <c:BindableTextBox x:Name="InputBox" Margin="0,0,0,0" Text="{Binding Input, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                               EnterCommand="{Binding SendCommand}" MinHeight="28"
                               TextWrapping="Wrap" Grid.Row="2" Grid.ColumnSpan="1">
                        </c:BindableTextBox>

                        <Button Grid.Column="1" Grid.Row="10" Content="Send" Width="60" BorderThickness="1" BorderBrush="#5E808080"
                                Command="{Binding SendCommand}" Margin="1,1,3,1"/>
                    </Grid>

                    <TextBlock Margin="4,0,4,4" Text="{Binding Subject}" TextWrapping="Wrap" Foreground="Gray" MaxHeight="80"/>

                    <c:AutoscrollableListBox x:Name="OutputArea" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="1" Margin="0,0,3,0"
                                     ItemsSource="{Binding Messages}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemTemplateSelector>
                            <c:MessageItemTemplateSelector>
                                <c:MessageItemTemplateSelector.TextMessage>
                                    <DataTemplate DataType="messages:TextMessageViewModel">
                                        <TextBlock TextWrapping="Wrap" Width="{Binding ActualWidth, ElementName=OutputArea}">
                                            <Run Text="{Binding Timestamp, StringFormat=[HH:mm:ss], Mode=OneWay}" Foreground="Gray"/><Run Text=" "/><Run x:Name="AuthorNameRun" Text="{Binding AuthorName, Mode=OneWay}" Foreground="DarkBlue" FontWeight="SemiBold"/><Run Text=":  "/><Run Text="{Binding Body, Mode=OneWay}"/>
                                        </TextBlock>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsModerator}" Value="True">
                                                <Setter TargetName="AuthorNameRun" Property="Foreground" Value="Green"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsAdmin}" Value="True">
                                                <Setter TargetName="AuthorNameRun" Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </c:MessageItemTemplateSelector.TextMessage>
                                <c:MessageItemTemplateSelector.DevoiceNotification>
                                    <DataTemplate DataType="messages:DevoiceNotificationViewModel">
                                        <TextBlock TextWrapping="Wrap">
                                    <Run Text="{Binding TargetName, Mode=OneWay}" FontWeight="Bold" /><Run Text=" has been devoiced by "/><Run Text="{Binding ActorName, Mode=OneWay}" FontWeight="Bold"/><Run Text=" ("/><Run Text="{Binding Reason, Mode=OneWay}"/><Run Text=" )"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </c:MessageItemTemplateSelector.DevoiceNotification>
                                <c:MessageItemTemplateSelector.BanNotification>
                                    <DataTemplate DataType="messages:BanNotificationViewModel">
                                        <TextBlock TextWrapping="Wrap">
                                    <Run Text="{Binding TargetName, Mode=OneWay}" FontWeight="Bold" /><Run Text=" has been banned by "/><Run Text="{Binding ActorName, Mode=OneWay}" FontWeight="Bold"/><Run Text=" ("/><Run Text="{Binding Reason, Mode=OneWay}"/><Run Text=" )"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </c:MessageItemTemplateSelector.BanNotification>
                                <c:MessageItemTemplateSelector.GrantedModershipNotification>
                                    <DataTemplate DataType="messages:GrantedModershipNotificationViewModel">
                                        <TextBlock TextWrapping="Wrap">
                                    <Run Text="{Binding ActorName, Mode=OneWay}" FontWeight="Bold" /><Run Text=" has granted mordership to "/><Run Text="{Binding TargetName, Mode=OneWay}" FontWeight="Bold"/>
                                        </TextBlock>
                                    </DataTemplate>
                                </c:MessageItemTemplateSelector.GrantedModershipNotification>
                                <c:MessageItemTemplateSelector.RemovedModershipNotification>
                                    <DataTemplate DataType="messages:RemovedModershipNotificationViewModel">
                                        <TextBlock TextWrapping="Wrap">
                                    <Run Text="{Binding TargetName, Mode=OneWay}" FontWeight="Bold" /><Run Text=" is not moderator anymore."/>
                                        </TextBlock>
                                    </DataTemplate>
                                </c:MessageItemTemplateSelector.RemovedModershipNotification>
                            </c:MessageItemTemplateSelector>
                        </ListBox.ItemTemplateSelector>
                    </c:AutoscrollableListBox>

                    <ListBox Margin="0,3,0,0" Grid.Row="0" Grid.RowSpan="3" 
                             BorderThickness="0" Background="Transparent" HorizontalAlignment="Stretch"
                             Grid.Column="2"  ItemsSource="{Binding ChatPlayers}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Border Width="26" Height="26" Background="#92808080">
                                        <!--Photo-->
                                    </Border>
                                    <TextBlock x:Name="AuthorNameTextBlock" Text="{Binding Name}" VerticalAlignment="Center" Margin="6,0,0,0" />
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding IsModer}" Value="True">
                                        <Setter TargetName="AuthorNameTextBlock" Property="Foreground" Value="Green"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsAdmin}" Value="True">
                                        <Setter TargetName="AuthorNameTextBlock" Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>


                    <GridSplitter Grid.RowSpan="3" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Right" Background="Wheat" Width="3" />

                </Grid>
            </TabItem>
            <TabItem Header="  Search  ">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Text="Enter User name (it uses 'contains'):" Foreground="Gray" Margin="2"/>
                    
                    <c:BindableTextBox Grid.Row="1" Margin="2,2,2,3" Height="28" Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EnterCommand="{Binding SearchCommand}"/>

                    <Button Grid.Column="1" Grid.Row="1" Content="Search" Width="60" BorderThickness="1" BorderBrush="#5E808080"
                            Command="{Binding SearchCommand}" Margin="2,1,2,3"/>

                    <xctk:BusyIndicator Grid.Row="2" Margin="2,1,2,1" Grid.ColumnSpan="2" IsBusy="{Binding IsSearching}">
                        <DataGrid ItemsSource="{Binding SearchResult}" AutoGenerateColumns="True" CanUserAddRows="False" CanUserDeleteRows="False">

                        </DataGrid>
                    </xctk:BusyIndicator>
                </Grid>
            </TabItem>

            <TabItem Header="  SQL  ">
            </TabItem>
        </TabControl>
    </xctk:BusyIndicator>
</Window>
